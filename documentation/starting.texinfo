@node Installation
@section Installation

The short version: extend your Scheme library search path to include
the @code{industria} directory, e.g.@: if you're using Ikarus on a Unix
system and you unpacked Industria in your home directory:
@verbatim
export IKARUS_LIBRARY_PATH=$HOME/industria
@end verbatim

Other possible environment variables include @code{CHEZSCHEMELIBDIRS},
@code{LARCENY_LIBPATH}, @code{MOSH_LOADPATH} and @code{YPSILON_SITELIB}.
For more details please refer to your Scheme implementation's
documentation.
An alternative is to move or symlink the @code{weinholt} directory into a
directory that already exists in your Scheme's search path.

Releases are available at
@url{https://weinholt.se/industria/}.
@cindex release tarballs

The development version of Industria is available at GitHub
@url{https://github.com/weinholt/industria/}:
@cindex development snapshots

You will also need a number of SRFI libraries. If your Scheme does not
come with a collection of SRFIs already you can get them from the
@url{https://code.launchpad.net/~scheme-libraries-team/scheme-libraries/srfi,
Scheme Libraries Team at Launchpad}.

Another way to install the libraries is to use the Dorodango package
manager. It's available at @url{http://home.gna.org/dorodango/}.
@cindex dorodango, package manager

@node Usage
@section Usage
I'll assume you're familiar with Scheme already. To load an
@rnrs{} library into your program or library, put it in the @code{import}
specification. Here's Hello World for @rnrs{} Scheme:

@lisp
#!/usr/bin/env scheme-script
(import (rnrs))
(display "Hello World!\n")
@end lisp
@cindex Hello World, example

The first line is useful on Unix systems, but it is specified in the
@rnrs{} Non-Normative Appendices, so your Scheme might not accept
programs with that line present.

Common file extensions for @rnrs{} programs are @code{.scm},
@code{.sps}, @code{.ss} or no extension at all. The @code{(rnrs)}
library will normally be built-in and might not correspond to any
file, but other libraries are usually found by converting the library
name into a file system path. Here's an example that uses the
@code{(weinholt crypto md5)} library:

@lisp
(import (rnrs)
        (weinholt crypto md5))
(display (md5->string (md5 (string->utf8 (cadr (command-line))))))
(newline)
@end lisp

The @code{md5->string} and @code{md5} bindings were imported from
@code{weinholt/crypto/md5.sls}. Here is how you might run the program
with Ikarus:
@verbatim
$ ikarus --r6rs-script example.sps "a grand scheme"
A6FD66F0888EDCAC812D441EFE95E6C1
@end verbatim
